name: Folder-Specific CI

# Define concurrency at the workflow level
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # This ensures jobs don't cancel each other

on:
  pull_request:
    branches:
      - ga-new-actions
    paths:
      - 'sample-applications/chat-question-and-answer-core/**'
      - 'sample-applications/chat-question-and-answer/**'
  push:
    branches:
      - ga-new-actions
    paths:
      - 'sample-applications/chat-question-and-answer-core/**'
      - 'sample-applications/chat-question-and-answer/**'
      - '.github/workflows/'

jobs:
  detect-changes:
    runs-on: ubuntu-22.04-32core-128GB
    outputs:
      core_changed: ${{ steps.filter.outputs.core_changed }}
      qa_changed: ${{ steps.filter.outputs.qa_changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Filter Changes
        id: filter
        run: |
          # Determine the comparison based on event type
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Event: Pull Request"
            # For pull requests, compare against the PR base
            git fetch origin ${{ github.event.pull_request.base.sha }} --depth=1
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            HEAD_SHA=${{ github.event.pull_request.head.sha }}
          else
            echo "Event: Push"
            # For pushes, compare against the previous commit
            git fetch origin ${{ github.event.before }} --depth=1
            BASE_SHA=${{ github.event.before }}
            HEAD_SHA=${{ github.sha }}
          fi
          
          echo "Comparing $BASE_SHA...$HEAD_SHA"
          
          # Check if core folder has changes
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -q "^sample-applications/chat-question-and-answer-core/"; then
            echo "Core folder has changes"
            echo "core_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in core folder"
            echo "core_changed=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if Q&A folder has changes
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -q "^sample-applications/chat-question-and-answer/"; then
            echo "Q&A folder has changes"
            echo "qa_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in Q&A folder"
            echo "qa_changed=false" >> $GITHUB_OUTPUT
          fi

  core-job:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.core_changed == 'true' }}
    runs-on: ubuntu-22.04-32core-128GB
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Tools
        uses: ./.github/actions/setup-tools
      
      - name: Run Unit Tests for Core
        shell: bash
        env:
          HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
          LLM_MODEL: Intel/neural-chat-7b-v3-3
          EMBEDDING_MODEL_NAME: BAAI/bge-small-en-v1.5
          RERANKER_MODEL: BAAI/bge-reranker-base
        run: |
          cd sample-applications/chat-question-and-answer-core
          poetry install --no-root --with dev
          bash scripts/setup_env.sh llm=ModelServer embed=Embedding
          cd tests/
          poetry run pytest --cov=../../chat_question_and_answer_core --cov-report=xml
      
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: core-coverage-report
          path: sample-applications/chat-question-and-answer-core/tests/coverage.xml

  qa-job:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.qa_changed == 'true' }}
    runs-on: ubuntu-22.04-32core-128GB
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Tools
        uses: ./.github/actions/setup-tools
      
      - name: Run Unit Tests for Q&A
        env:
          HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
          LLM_MODEL: Intel/neural-chat-7b-v3-3
          EMBEDDING_MODEL_NAME: BAAI/bge-small-en-v1.5
          RERANKER_MODEL: BAAI/bge-reranker-base
        run: |
          cd sample-applications/chat-question-and-answer
          poetry install --with dev
          source scripts/setup_env.sh llm=ModelServer embed=Embedding
          cd tests/unit_tests
          poetry run pytest --cov=../../chat_question_and_answer --cov-report=xml
      
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: qa-coverage-report
          path: sample-applications/chat-question-and-answer/tests/unit_tests/coverage.xml
